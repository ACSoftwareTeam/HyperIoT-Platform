

dependencies {
	//OSGi Basic Imports
	compileOnly group: "org.osgi", name: "osgi.core", version: project.osgiVersion
	compileOnly group: "org.osgi", name:  "osgi.cmpn", version: project.osgiCompendiumVersion
	//SLF4J
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: project.slf4jVersion
	
	//Persistence
	compileOnly group: 'org.hibernate', name: 'hibernate-core', version: project.hibernateVersion
	compileOnly group: "org.hibernate.javax.persistence", name: "hibernate-jpa-2.1-api",version: project.hibernateJpaApiVersion
	//JPA Dependencies
	compileOnly group: "javax.transaction", name: "javax.transaction-api",version: project.javaxTransactionVersion
	compileOnly group: "org.apache.aries.jpa", name: "org.apache.aries.jpa.api", version: project.apacheAriesJpaVersion
	compileOnly group: "org.apache.cxf" ,name: "cxf-rt-rs-security-jose-jaxrs",version: project.cxfVersion
	//Validation
	compileOnly group: "javax.validation", name: "validation-api",version:project.javaxValidationVersion
	compileOnly group: "org.hibernate",name: "hibernate-validator",version:project.hibernateValidatorVersion
	// Avro
	compileOnly group: "org.apache.avro", name: "avro", version: project.apacheAvroVersion

	//HProjectDependency
	compileOnly group: "it.acsoftware.hyperiot.hproject", name: "HyperIoTHProject-api", version:project.hyperIoTPlatformVersion
	compileOnly group: "it.acsoftware.hyperiot.hproject", name: "HyperIoTHProject-actions", version:project.hyperIoTPlatformVersion
	compileOnly group : "it.acsoftware.hyperiot.hproject", name: "HyperIoTHProject-model" , version:project.hyperIoTPlatformVersion

	//HyperIoTBase Dependencies
	compileOnly group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-api", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-service", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-util", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-security", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-model", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.base", name: "HyperIoTBase-actions", version:project.hyperIoTVersion
	//SharedEntityDependencies
	compileOnly group: "it.acsoftware.hyperiot.shared.entity", name:"HyperIoTSharedEntity-api", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.shared.entity", name:"HyperIoTSharedEntity-model", version:project.hyperIoTVersion

	//AssetCategory dependencies
	compileOnly group: "it.acsoftware.hyperiot.asset.category" , name:"HyperIoTAssetCategory-model" , version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.asset.category" , name:"HyperIoTAssetCategory-api" , version:project.hyperIoTVersion

	//AssetTag dependencies
	compileOnly group: "it.acsoftware.hyperiot.asset.tag", name: "HyperIoTAssetTag-model", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.asset.tag", name: "HyperIoTAssetTag-api", version:project.hyperIoTVersion

	//Project Dependencies	
	compileOnly project(":modules:HyperIoTKit:HyperIoTKit-api")
	
	compileOnly project(":modules:HyperIoTKit:HyperIoTKit-model")
	compileOnly project(":modules:HyperIoTKit:HyperIoTKit-repository")

	compileOnly group: "it.acsoftware.hyperiot.huser", name: "HyperIoTHUser-model", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.permission", name: "HyperIoTPermission-model", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.huser", name: "HyperIoTHUser-api", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.permission", name: "HyperIoTPermission-api", version:project.hyperIoTVersion
	compileOnly group: "it.acsoftware.hyperiot.algorithm", name: "HyperIoTAlgorithm-model", version:project.hyperIoTPlatformVersion
	
}

jar {
	manifest {
		attributes('dsannotations': '*')
	}
}

task buildHIT(type: GradleBuild) {
	tasks = [ 'clean','build','install' ]
}

task publishHIT(type: GradleBuild) {
	tasks = [ 'clean','build','install','publish' ]
}

publishing {
    	publications {
        	hyperiot(MavenPublication) {
            	from components.java
        	}
    }
 }