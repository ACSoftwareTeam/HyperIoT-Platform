apply plugin: 'com.github.lburgazzoli.karaf'


configurations {
    hProject {
        transitive = false
    }

    hProjectRest {
        transitive = false
    }

    hProjectHBase {
        transitive = false
    }

    hProjectHadoop {
        transitive = false
    }

    hProjectJob {
        transitive = false
    }

    hProjectJobBasic {
        transitive = false
    }
}

dependencies {
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-actions:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-api:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-service:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-model:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-repository:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-deserialization-api:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-deserialization-model:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-deserialization-service:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-serialization-api:' + project.version
    hProject 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-serialization-service:' + project.version
    hProjectJobBasic 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-actions:' + project.version
    hProjectJobBasic 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-api:' + project.version
    hProjectJobBasic 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-model:' + project.version
    hProjectJobBasic 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-repository:' + project.version
    hProjectJob 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job:' + project.version
    hProjectJob 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-service-rest:' + project.version
    hProjectJob 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-service:' + project.version
    hProjectJob 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-job-util:' + project.version
    hProjectHBase 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hbase-api:' + project.version
    hProjectHBase 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hbase-model:' + project.version
    hProjectHBase 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hbase-service:' + project.version
    hProjectHBase 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hbase-util:' + project.version
    hProjectHadoop 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hadoop-api:' + project.version
    hProjectHadoop 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hadoop-service:' + project.version
    hProjectHadoop 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-hadoop-util:' + project.version
    hProjectRest 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-service-rest:' + project.version
    hProjectRest 'it.acsoftware.hyperiot.hproject:HyperIoTHProject-service-websocket:' + project.version
}


karaf {
    features {
        // See section below for karaf 4 support if using 1.3.0
        xsdVersion = '1.2.0'
        version = '4.0.0' // Your project version
        description = 'Karaf features'

        // Include the current project, false by default
        includeProject = false

        // Add in extra repositories to the features xml file
        //Example:
        //repository "mvn:org.code-house.jackson/features/2.8.7/xml/features"

        feature {
            name = 'hyperiot-hproject'
            description = 'All  Hyperiot HyperIoTHProject modules'

            feature 'hyperiot-base'
            configurations 'hProject', 'hProjectJobBasic', 'hProjectJob', 'hProjectHBase', 'hProjectHadoop', 'hProjectRest'

            project.configurations
                    .collectMany { it.allDependencies }
                    .findAll {
                        bundle(it.getAt("group") + ":" + it.getAt("name")) {
                            attribute 'start-level', '82'
                        }
                    }
        }


        feature {
            name = 'hyperiot-hproject-basic'
            description = 'All  Hyperiot HyperIoTHProject modules with NO rest services'

            feature 'hyperiot-base-basic'
            configurations 'hProject', 'hProjectJobBasic'
        }

    }

    // Enable generation of Karaf Archive KAR based on features defined above.
    // To generate kar either use generateKar, assemble or install
    kar {
        // Optionally set the kar name, default is:
        //
        //     ${features.name}-${features.version}.kar
        //
        // Extension is automatically set to .kar
        archiveName = 'HyperIoTHProject'
    }
}


task buildHIT(type: GradleBuild) {

}

task buildFeatures(type: GradleBuild) {
    tasks = ['clean', 'generateFeatures', 'build', 'install']
}

task publishHIT(type: GradleBuild) {

}

task publishFeatures(type: GradleBuild) {
    tasks = ['clean', 'generateFeatures', 'build', 'install', 'publish']
}

def featureFile = 'build/karaf/features/' + project.name + '-' + project.version + '.xml'
publishing {
    publications {
        hyperiot(MavenPublication) {
            artifactId project.name
            artifact source: featureFile, classifier: 'features'
        }
    }
}
